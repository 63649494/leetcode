/****************实现 strStr() 函数。给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回  -1。示例 1:输入: haystack = "hello", needle = "ll"输出: 2示例 2:输入: haystack = "aaaaa", needle = "bba"输出: -1说明:当 needle 是空字符串时，我们应当返回什么值呢？这是一个在面试中很好的问题。对于本题而言，当 needle 是空字符串时我们应当返回 0 。这与C语言的 strstr() 以及 Java的 indexOf() 定义相符。****************/int strStr(char* haystack, char* needle) {    //计算needle的长度，为0返回0    int nlen=strlen(needle);    if(nlen==0) return 0;    int hlen=strlen(haystack);    int k=0;    //在hatstack中找needle的第一个元素        //找到后            //+1=+1，一直相等返回i，否则break；        //找到len(haystack)-len(needle)时还不一样则返回-1    for(int i=0;i<=(hlen-nlen);i++){        printf("i=%d,hlen-nlen=%d\n",i,hlen-nlen);        if(haystack[i]==needle[0]){            k=0;            for(int j=i;j<=nlen+i-1;j++,k++){     printf("%c==%c,j=%d,i=%d,k=%d\n",haystack[j],needle[k],j,i,k);                if(haystack[j]!=needle[k])                    break;                if(j==nlen+i-1&&haystack[j]==needle[k])                    return i;            }                        //i=i+k-1;            printf("i=%d,k=%d\n",i,k);        }    }    return -1;}